version: '3'
services:
  
  db_review:
    image: postgres:14-alpine
    container_name: db
    volumes:
      - data:/var/lib/mysql
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=django
      - POSTGRES_DB=microservicoreview
    ports:
      - "8001:5432"

  review:
    build: 
      context: ./servicos/review/
      dockerfile: Dockerfile
    container_name: MicroServicoReview
    command: sh -c "sleep 5 && cd servicos/review/MicroServicoReview && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db_review

  broker:
    build:
      context: ./broker/
      dockerfile: Dockerfile
    container_name: Broker
    command: sh -c "cd broker/broker && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8002"
    volumes:
      - .:/app
    ports:
      - "8002:8002"
    depends_on:
      - review

  autenticacao_redis_db:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: admin

  autenticacao_postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5439:5439"
  
  autenticacao_nodejs_db:
    build:
      context: ./servicos/autenticacao/
      dockerfile: Dockerfile
    container_name: MicroServicoAutenticacao
    command: sh -c "cd servicos/autenticacao/MicroServicoAutenticacao && npm install && npm run start"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    depends_on:
      - autenticacao_postgres_db
      - autenticacao_redis_db
  
volumes:
  data: